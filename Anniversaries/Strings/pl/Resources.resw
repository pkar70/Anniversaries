<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="infoLine1.Text" xml:space="preserve">
    <value>   Ta bardzo prosta aplikacja łączy informacje o aktualnym dniu, korzystając ze stron Wikipedii w kilku językach. W ten sposób:</value>
  </data>
  <data name="infoLine2.Text" xml:space="preserve">
    <value>1) dostajemy informacje o większej liczbie zdarzeń niż jest zawarta na stronie w jakimkolwiek języku;</value>
  </data>
  <data name="infoLine3.Text" xml:space="preserve">
    <value>2) można sprawdzić które wydarzenia uznawane są za ważne w której grupie językowej;</value>
  </data>
  <data name="infoLine4.Text" xml:space="preserve">
    <value> </value>
  </data>
  <data name="infoLine5.Text" xml:space="preserve">
    <value>Tak więc wszystkie informacje, które aplikacja prezentuje, pochodzą z Wikipedii, i podlegają licencji takiej jak w Wikipedii (CC-BY-SA).</value>
  </data>
  <data name="infoLine6.Text" xml:space="preserve">
    <value>Angielska strona z opisem dnia dzisiejszego:</value>
  </data>
  <data name="settHdr.Text" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="uiSetTabE.Header" xml:space="preserve">
    <value>Aktywne zakładki</value>
  </data>
  <data name="uiSetTabE.OffContent" xml:space="preserve">
    <value>wydarzenia</value>
  </data>
  <data name="uiSetTabE.OnContent" xml:space="preserve">
    <value>Wydarzenia</value>
  </data>
  <data name="uiSetTabB.OffContent" xml:space="preserve">
    <value>urodziny</value>
  </data>
  <data name="uiSetTabB.OnContent" xml:space="preserve">
    <value>Urodziny</value>
  </data>
  <data name="uiSetTabD.OffContent" xml:space="preserve">
    <value>zgony</value>
  </data>
  <data name="uiSetTabD.OnContent" xml:space="preserve">
    <value>Zgony</value>
  </data>
  <data name="uiSetTabH.OffContent" xml:space="preserve">
    <value>święta</value>
  </data>
  <data name="uiSetTabH.OnContent" xml:space="preserve">
    <value>Święta</value>
  </data>
  <data name="uiSetLangEn.Header" xml:space="preserve">
    <value>Aktywne języki</value>
  </data>
  <data name="uiSetLangEn.OffContent" xml:space="preserve">
    <value>angielski</value>
  </data>
  <data name="uiSetLangEn.OnContent" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="uiSetLangPl.OffContent" xml:space="preserve">
    <value>polski</value>
  </data>
  <data name="uiSetLangPl.OnContent" xml:space="preserve">
    <value>Polski</value>
  </data>
  <data name="uiSetLangFr.OffContent" xml:space="preserve">
    <value>francuski</value>
  </data>
  <data name="uiSetLangFr.OnContent" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="uiSetLangEs.OffContent" xml:space="preserve">
    <value>hiszpański</value>
  </data>
  <data name="uiSetLangEs.OnContent" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="uiSetLangRu.OffContent" xml:space="preserve">
    <value>rosyjski</value>
  </data>
  <data name="uiSetLangRu.OnContent" xml:space="preserve">
    <value>Русский</value>
  </data>
  <data name="uiSetAddLang.Text" xml:space="preserve">
    <value>Prośby o dodanie kolejnych języków proszę kierować za pośrednictwem FeedBack Hub</value>
  </data>
  <data name="bBirth.Label" xml:space="preserve">
    <value>Urodziny</value>
  </data>
  <data name="bDeath.Label" xml:space="preserve">
    <value>Zgony</value>
  </data>
  <data name="bEvent.Label" xml:space="preserve">
    <value>Wydarzenia</value>
  </data>
  <data name="bHelp.Label" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="bHolid.Label" xml:space="preserve">
    <value>Święta</value>
  </data>
  <data name="bRefresh.Label" xml:space="preserve">
    <value>Wczytaj</value>
  </data>
  <data name="bSettings.Label" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="resAboutRate.Label" xml:space="preserve">
    <value>Oceń</value>
  </data>
  <data name="manifestAppName" xml:space="preserve">
    <value>Anniversariusz</value>
  </data>
  <data name="mpHeader.Text" xml:space="preserve">
    <value>Dzisiaj w historii</value>
  </data>
  <data name="uiSetLinksActive.Header" xml:space="preserve">
    <value>Linki do Wikipedia</value>
  </data>
  <data name="uiSetLinksActive.OffContent" xml:space="preserve">
    <value>zablokowane</value>
  </data>
  <data name="uiSetLinksActive.OnContent" xml:space="preserve">
    <value>Aktywne</value>
  </data>
  <data name="infoLine5a.Text" xml:space="preserve">
    <value>  Domyślnie linki nie działają (choć są podświetlone). Można jednak w Ustawieniach włączyć otwieranie strony Wikipedii w zewnętrznej przeglądarce (np. IE).</value>
  </data>
  <data name="uiSetLinksInfo.Text" xml:space="preserve">
    <value>(strona Wikipedii zostanie otwarta w domyślnej przeglądarce)</value>
  </data>
</root>